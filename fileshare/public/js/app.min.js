var ModelItem=Backbone.Model.extend({defaults:{supportsFileAPI:!1,fileAddress:null,fileMimeType:"",fileExtension:"",fileLoad:!1,connectedUsers:0,storedBlob:null,receivedBlobArray:new Array,receivedBlob:null,receivedExtension:"",socket:null,fileSlice:1024,socketAddress:"http://localhost:8080"},initialize:function(){_.bindAll(this,"featureSupport"),this.featureSupport()},featureSupport:function(){window.File&&window.FileReader&&window.FileList&&window.Blob&&this.set("supportsFileAPI",!0)}}),SocketView=Backbone.View.extend({model:null,socket:null,initialize:function(){_.bindAll(this,"render","fileshare"),this.model.bind("change:storedBlob",this.fileshare,this),this.render()},render:function(){console.log("loadFile"),this.socket=io.connect(this.model.get("socketAddress"));var a=this;this.socket.on("welcome",function(b){console.log("Client welcome callback: "+b),a.model.set("connectedUsers",b.clients)}),this.socket.on("fileshare",function(b){console.log("Client fileshare callback");var c=a.model.get("receivedBlobArray");c[c.length]=b,a.model.set("receivedBlobArray",c)}),this.socket.on("fileshare-complete",function(b){console.log("Client fileshare complete callback"),a.model.set("receivedExtension",b),a.model.set("receivedBlob",a.model.get("receivedBlobArray").join("")),a.model.set("receivedBlobArray",new Array)})},fileshare:function(){var a=0;a=this.model.get("storedBlob").length/this.model.get("fileSlice")%1>0?Math.round(this.model.get("storedBlob").length/this.model.get("fileSlice"))+1:this.model.get("storedBlob").length/this.model.get("fileSlice"),console.log("Client: emit fileshare, number of parts: "+a);for(var b=0;a>b;b++)this.socket.emit("fileshare",this.model.get("storedBlob").slice(b*this.model.get("fileSlice"),b*this.model.get("fileSlice")+this.model.get("fileSlice")));this.socket.emit("fileshare-complete",this.model.get("fileExtension"))}}),FileLoaderView=Backbone.View.extend({model:null,initialize:function(){_.bindAll(this,"loadFile"),this.model.bind("change:fileLoad",this.loadFile,this)},loadFile:function(){console.log("loadFile");var a=this,b=new FileReader;b.onloadstart=function(a){console.log("onloadstart")},b.onprogress=function(a){var b=Math.round(a.loaded/a.total*100);console.log("onprogress: "+b)},b.onabort=function(a){console.log("onabort")},b.onerror=function(a){console.log("onerror")},b.onload=function(a){console.log("onload")},b.onloadend=function(c){if(console.log("onloadend: "+c.target.readyState),c.target.readyState==FileReader.DONE){var d=c.target.result;a.model.set("storedBlob",d)}b=null},b.readAsDataURL(this.model.get("fileAddress"))}}),FileReceivedView=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"render","validateDOM"),this.model.bind("change:receivedBlob",this.render,this)},render:function(){console.log("FileReceivedView");var a=this.model.get("receivedBlob"),b=String(String((new Date).getTime())+String(Math.floor(1e5*Math.random()+1)))+this.model.get("receivedExtension");console.log(b),$(this.el).append('<p class="file"><a download="'+b+'" href="'+a+'">Download file</a></p>')},validateDOM:function(){return $(this.el).length>=1}}),HeaderView=Backbone.View.extend({el:null,model:null,initialize:function(){_.bindAll(this,"render","validateDOM"),this.model.bind("change:connectedUsers",this.render,this)},render:function(){$(this.el).html("Connected users: "+this.model.get("connectedUsers"))},validateDOM:function(){return $(this.el).length>=1}}),ControllerItem=Backbone.View.extend({el:null,events:function(){return _.extend({"dragover .file-drop":"fileDragOver"},{"drop .file-drop":"fileDragDrop"})},initialize:function(){_.bindAll(this,"fileDragOver","fileDragDrop","processFile")},processFile:function(a){console.log(a.type),this.model.set("fileMimeType",a.type),this.model.set("fileExtension","."+String(a.name.split(".")[a.name.split(".").length-1])),this.model.set("fileAddress",a),this.model.set("fileLoad",!this.model.get("fileLoad"))},fileDragOver:function(a){console.log("fileDragOver"),a.stopPropagation(),a.preventDefault(),void 0!=a.dataTransfer?a.dataTransfer.dropEffect="copy":void 0!=a.originalEvent.dataTransfer&&(a.originalEvent.dataTransfer.dropEffect="copy")},fileDragDrop:function(a){if(console.log("fileDragDrop"),a.stopPropagation(),a.preventDefault(),void 0!=a.dataTransfer){console.log(a.dataTransfer.files);var b=a.dataTransfer.files}else if(void 0!=a.originalEvent.dataTransfer){console.log(a.originalEvent.dataTransfer.files);var b=a.originalEvent.dataTransfer.files}if(b.length>0){var c=b[0];this.processFile(c)}}});$(document).ready(function(){!function(a){var b=new ModelItem;new SocketView({model:b}),new FileLoaderView({model:b}),new FileReceivedView({model:b,el:a(".file-received")}),new HeaderView({model:b,el:a("h1")}),new ControllerItem({model:b,el:a("body")})}(jQuery)});